// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.CassandraClusterArgs;
import com.pulumi.azure.cosmosdb.inputs.CassandraClusterState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Cassandra Cluster.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.getLocation())
 *             .resourceGroupName(exampleResourceGroup.getName())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.getName())
 *             .virtualNetworkName(exampleVirtualNetwork.getName())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .scope(exampleVirtualNetwork.getId())
 *             .roleDefinitionName(&#34;Network Contributor&#34;)
 *             .principalId(&#34;e5007d2c-4b13-4a74-9b6a-605d99f03501&#34;)
 *             .build());
 * 
 *         var exampleCassandraCluster = new CassandraCluster(&#34;exampleCassandraCluster&#34;, CassandraClusterArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.getName())
 *             .location(exampleResourceGroup.getLocation())
 *             .delegatedManagementSubnetId(exampleSubnet.getId())
 *             .defaultAdminPassword(&#34;Password1234&#34;)
 *             .build());
 * 
 *         }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cassandra Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/cassandraCluster:CassandraCluster example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DocumentDB/cassandraClusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/cassandraCluster:CassandraCluster")
public class CassandraCluster extends com.pulumi.resources.CustomResource {
    /**
     * The initial admin password for this Cassandra Cluster.
     * 
     */
    @Export(name="defaultAdminPassword", type=String.class, parameters={})
    private Output<String> defaultAdminPassword;

    /**
     * @return The initial admin password for this Cassandra Cluster.
     * 
     */
    public Output<String> defaultAdminPassword() {
        return this.defaultAdminPassword;
    }
    /**
     * The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="delegatedManagementSubnetId", type=String.class, parameters={})
    private Output<String> delegatedManagementSubnetId;

    /**
     * @return The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> delegatedManagementSubnetId() {
        return this.delegatedManagementSubnetId;
    }
    /**
     * The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CassandraCluster(String name) {
        this(name, CassandraClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CassandraCluster(String name, CassandraClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CassandraCluster(String name, CassandraClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/cassandraCluster:CassandraCluster", name, args == null ? CassandraClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CassandraCluster(String name, Output<String> id, @Nullable CassandraClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/cassandraCluster:CassandraCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CassandraCluster get(String name, Output<String> id, @Nullable CassandraClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CassandraCluster(name, id, state, options);
    }
}
