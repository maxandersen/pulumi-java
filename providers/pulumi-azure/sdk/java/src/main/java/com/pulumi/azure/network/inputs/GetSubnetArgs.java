// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSubnetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubnetArgs Empty = new GetSubnetArgs();

    /**
     * Specifies the name of the Subnet.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Specifies the name of the Subnet.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Specifies the name of the resource group the Virtual Network is located in.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return Specifies the name of the resource group the Virtual Network is located in.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the name of the Virtual Network this Subnet is located within.
     * 
     */
    @Import(name="virtualNetworkName", required=true)
    private String virtualNetworkName;

    /**
     * @return Specifies the name of the Virtual Network this Subnet is located within.
     * 
     */
    public String virtualNetworkName() {
        return this.virtualNetworkName;
    }

    private GetSubnetArgs() {}

    private GetSubnetArgs(GetSubnetArgs $) {
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualNetworkName = $.virtualNetworkName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubnetArgs $;

        public Builder() {
            $ = new GetSubnetArgs();
        }

        public Builder(GetSubnetArgs defaults) {
            $ = new GetSubnetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name of the Subnet.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the resource group the Virtual Network is located in.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param virtualNetworkName Specifies the name of the Virtual Network this Subnet is located within.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(String virtualNetworkName) {
            $.virtualNetworkName = virtualNetworkName;
            return this;
        }

        public GetSubnetArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualNetworkName = Objects.requireNonNull($.virtualNetworkName, "expected parameter 'virtualNetworkName' to be non-null");
            return $;
        }
    }

}
